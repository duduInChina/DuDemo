plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // kapt注解处理器，使用了注解模块都需要引入
    id 'org.jetbrains.kotlin.kapt'
    // 引入therouter插件，只要是有com.android.application这个的模块
    id 'therouter'
}
boolean toapp = moduleToApplication.toBoolean()
apply from: '../dependencies.gradle' // 导入统一配置

android {
    namespace 'com.dudemo'
    compileSdk 33  // 指定android 13 sdk编译

    defaultConfig {
        applicationId "com.dudemo"
        minSdk 26          // 最低兼容8.0
        targetSdk 33       // 表示已经在Android 13 中已经做过充分测试
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    viewBinding {
        enabled = true
    }
}

dependencies {

    kapt "cn.therouter:apt:$TheRouterVersion"

    implementation project(path: ':core:common')

    // Android 12 提供了启动画面的API, 该库为向后兼容库，参考：https://developer.android.google.cn/guide/topics/ui/splash-screen/migrate?hl=zh-cn
    implementation 'androidx.core:core-splashscreen:1.0.1'

    if (!toapp){
        implementation project(path: ':Weather')
        implementation project(path: ':Download')
        implementation project(path: ':DemoAlbum')
        implementation project(path: ':Log')
        implementation project(path: ':UPush')
        implementation project(path: ':Video')
        implementation project(path: ':Audio')
        implementation project(path: ':Router')
    }

}
